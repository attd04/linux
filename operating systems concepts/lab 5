# Create two directories
mkdir d1 d2

# In one of directories create 1000 files with different names. The format of the file name: XY.txt, where X is a number, Y â€“ letters from a to z.
for ((i=1; i<=1000; i++)); do
    letter=$(printf "\\$(printf %o $((i%26 + 96)))")
    file_name="${i}${letter}.txt"
    touch "d1/$file_name"
done

# Display both directories and their contents (recursively)
echo 'Directories D1 and D2 after step 2:'
ls -R

# Read the letter entered by the user
echo "Enter a letter: "
read user_input

# Copy only files with the user specified letter in their name to another directory.
for file in d1/*$user_input*; do
    if [ -f "$file" ]; then
        cp "$file" d2/
    fi
done

# Display both directories and their contents (recursively)
echo 'Directories D1 and D2 after step 5:'
ls -R



theory: 
1. What $@ special variable is used for?
all of the parameters passed to the script

2. What basename command is used for?
strips directory information and suffixes from file names 

3. What is the difference between echo and printf commands?
printf has more precise control over what's being printed so it's more suitable for numbers and decimals.
echo is good for printing text or strings because it has very little formatting requirements

4. Why do we need > symbol in the output?
